"""
main.py
Copyright (C) <2017>  <S. Cline>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
import glob
import os
import sys
import time
from dbbuilder import Dbbuilder
import decoder
from PyQt4 import QtGui
from interface import Interface


def main():
    """Call modules to build database and visualize data."""
    print('Beginning College Scorecard Visualizer...')
    print('Checking database...')

    #Create a glob list of the raw Scorecard data files
    raw_data_path = os.path.join(
        os.path.dirname(__file__), os.pardir, 'data', 'raw_data')
    glob_path = '%s/MERGED*.csv' % (raw_data_path)

    #Specify the path of the data types file generated by decoder module
    types_dest_path = os.path.join(
        os.path.dirname(__file__), os.pardir, 'data', 'temp', 'data_types.txt')
    if os.path.isfile(types_dest_path):
        print('Data types file found.')
    else:
        print('Generating data type file from raw data...')
        decoder.write_data_types(glob_path, types_dest_path)

    #Specify path for the database to be built from the raw data
    db_path = os.path.join(
        os.path.dirname(__file__), os.pardir, 'data', 'database',
        'college-scorecard.sqlite')
    print('Database location:', db_path)

    #Test for database existence before creating a Dbbuilder, as this will
    #create a database file if it does not yet exist.
    db_exists = os.path.isfile(db_path)
    builder = Dbbuilder(db_path, types_dest_path)

    if db_exists:
        print('Database found.')
    else:
        print('Generating database from raw data...')
        start_time = time.time()
        builder.build_database()
        print('Database structure generated in %s seconds.'
              % (time.time() - start_time))
    for year in range(1996, 2015):
        year_glob = glob.glob(('%s/MERGED' + str(year) + '*') % (raw_data_path))
        builder.update_database(year_glob[0], str(year))

    print('Opening interface...')
    app = QtGui.QApplication(sys.argv)
    interface = Interface(db_path)
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
